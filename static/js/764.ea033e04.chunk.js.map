{"version":3,"file":"static/js/764.ea033e04.chunk.js","mappings":"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","sources":["apollo/formatDate.js","components/quries/fetchAllArticles.js","components/pages/Blog.jsx","components/ui-elements/PageContainer.jsx","components/ui-elements/SectionSubtitle.jsx"],"sourcesContent":["export function formatDate(timestamp) {\n    const date = new Date(parseInt(timestamp, 10)); // Convert milliseconds to Date object\n    const day = String(date.getUTCDate()).padStart(2, '0'); // Get the day with leading zero\n    const month = String(date.getUTCMonth() + 1).padStart(2, '0'); // Get the month (0-indexed) with leading zero\n    const year = date.getUTCFullYear(); // Get the year\n\n    // Use string concatenation instead of template literals\n    return month + '-' + day + '-' + year; // Return formatted date as MM/DD/YYYY\n}","import gql from 'graphql-tag';\n\nexport const GET_ALL_ARTICLES = gql`\n    query AllArticles {\n        articles {\n            id\n            title\n            author\n            createdDate\n        }\n    }\n`;","import React from 'react';\n\nimport { useQuery } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\nimport PageContainer from '../ui-elements/PageContainer';\nimport SectionSubtitle from '../ui-elements/SectionSubtitle';\nimport { formatDate } from '../../apollo/formatDate';\nimport { GET_ALL_ARTICLES } from '../quries/fetchAllArticles';\n\n\n// Article component for every article on the list.\nconst Article = ({ id, title, author, createdDate }) => {\n    return (\n        <div className='cursor-pointer border-2 border-main rounded-md hover:bg-gray-300'>\n            <div className='bg-babyBlue py-10 flex justify-center rounded-t-md'>\n                <h4 className='text-xl font-bold'>{title}</h4>\n            </div>\n            <Link to={`/blog/article/${id}`}>\n                <div className='p-3'>\n                    \n                    <p className=''>Author: {author ? `${author}` : \"N/A\"}</p>\n                    <p className='text-sm text-gray-400 '>Created Date: {formatDate(createdDate)}</p>\n                </div>\n            </Link>  \n        </div>\n    )\n};\n\nconst Blog = () => {\n        const { data, loading, error } = useQuery(GET_ALL_ARTICLES);\n        // Loading state\n        if (loading) return <p>Loading...</p>;\n        // Error state\n        if (error) return <p>Error :( {error.message}</p>;\n\n        console.log(data.texts);\n    \n    return (\n        <>\n            <Helmet>\n                <title>Blog | BigBrain Therapy</title>\n                <meta name=\"description\" content=\"Explore our BlogBrain for expert insights on mental health, EMDR therapy, and wellness tips from BigBrain Therapy in Potomac, MD.\" />\n                <meta name=\"keywords\" content=\"BlogBrain, mental health blog, EMDR therapy, wellness tips, BigBrain Therapy, Potomac MD\" />\n                <link rel=\"canonical\" href=\"https://www.bigbraintherapy.com/blog\" />\n            </Helmet>\n            <section className='relative w-full h-auto overflow-hidden'>\n                {/* <HeroGrayBackground className=\"absolute inset-0 w-full h-full\" /> */}\n                <PageContainer className='relative z-10 text-darkGray dark:bg-black pb-32 sm:pb-12 md:pb-16 pt-10'>\n                    <SectionSubtitle subtitle=\"BlogBrain\" className=\"mb-20 sm:mb-4\" />\n                        <div className='grid grid-cols-2 gap-10'>\n                            {/* Render the list of articles */}\n                            {data.articles.map((article, index) => (\n                                <Article key={article.id} \n                                         id={article.id}\n                                         title={article.title}\n                                         author={article.author}\n                                         createdDate={article.createdDate}\n                                />\n                            ))}\n                        </div>\n                    </PageContainer>\n            </section>\n        </>\n    )\n}\n\nexport default Blog\n","import React from 'react'\n\nconst PageContainer = ({ className, children }) => {\n    return (\n        <div className={`flex justify-center w-full h-auto px-32 sm:px-8 md:px-10 lg:px-8 xl:px-10 ${className} poppins dark:bg-black`}>\n            <main className='h-auto w-full'>\n                {children}\n            </main>\n        </div>\n    )\n}\n\nexport default PageContainer\n","import React, { useEffect, useState } from 'react';\n\nconst SectionSubtitle = ({ subtitle, className }) => {\n    const [isDarkMode, setIsDarkMode] = useState(false);\n\n    useEffect(() => {\n        // Function to check and update dark mode status\n        const updateDarkMode = () => {\n            const darkModeEnabled = document.body.classList.contains('dark');\n            setIsDarkMode(darkModeEnabled);\n        };\n\n        // Initial check\n        updateDarkMode();\n\n        // Set up a MutationObserver to watch for changes to the body's class list\n        const observer = new MutationObserver(updateDarkMode);\n        observer.observe(document.body, { attributes: true, attributeFilter: ['class'] });\n\n        // Clean up the observer when the component unmounts\n        return () => observer.disconnect();\n    }, []);\n\n    // Provide a default value for the subtitle to avoid undefined errors\n    const effectiveSubtitle = subtitle || \"\";\n    // Calculate the width of the underline based on the subtitle length\n    const underlineWidth = `${effectiveSubtitle.length * 7.5}px`;\n\n    return (\n        <div className={`flex flex-col ${className}`}>\n            <h2 className=\"text-3xl font-semibold text-black relative dark:text-white sm:text-xl\">\n                {effectiveSubtitle}\n            </h2>\n            <div \n                className={`h-[3px] ${isDarkMode ? 'bg-[var(--underline-color-dark)]' : 'bg-[var(--underline-color-light)]'}`}\n                style={{ width: underlineWidth }}\n            ></div>\n        </div>\n    );\n};\n\nexport default SectionSubtitle;"],"names":["formatDate","timestamp","date","Date","parseInt","day","String","getUTCDate","padStart","getUTCMonth","getUTCFullYear","GET_ALL_ARTICLES","gql","_templateObject","_taggedTemplateLiteral","Article","_ref","id","title","author","createdDate","_jsxs","className","children","_jsx","Link","to","concat","Blog","data","loading","error","useQuery","message","console","log","texts","_Fragment","Helmet","name","content","rel","href","PageContainer","SectionSubtitle","subtitle","articles","map","article","index","isDarkMode","setIsDarkMode","useState","useEffect","updateDarkMode","darkModeEnabled","document","body","classList","contains","observer","MutationObserver","observe","attributes","attributeFilter","disconnect","effectiveSubtitle","underlineWidth","length","style","width"],"sourceRoot":""}