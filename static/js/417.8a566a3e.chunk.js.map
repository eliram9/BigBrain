{"version":3,"file":"static/js/417.8a566a3e.chunk.js","mappings":"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","sources":["components/quries/fetchArticle.js","components/pages/ArticleDetail.jsx","apollo/htmlHandler.js","components/ui-elements/PageContainer.jsx","components/ui-elements/SectionSubtitle.jsx"],"sourcesContent":["import gql from 'graphql-tag';\n\nexport const GET_ARTICLE_DETAIL = gql`\n    query ArticleQuery($id: ID!) {\n        article(id: $id) {\n            id\n            title\n            author\n            createdDate\n            texts {\n                id\n                paragraph\n            }\n        }\n    }\n`;","import React, { useEffect, useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useParams } from 'react-router-dom';\nimport parse from 'html-react-parser';\n\nimport PageContainer from '../ui-elements/PageContainer';\nimport SectionSubtitle from '../ui-elements/SectionSubtitle';\nimport { GET_ARTICLE_DETAIL } from '../quries/fetchArticle';\nimport { formatDate } from '../../apollo/formatDate';\nimport { sanitizeAndPrepareHtml } from'../../apollo/htmlHandler';\n\n\nconst ArticleParagraph = ({ paragraph }) => {\n    const preparedHtml = sanitizeAndPrepareHtml(paragraph);\n    return (\n        <div className=\"mb-10 articleContent poppins font-light\">\n            {parse(preparedHtml)}\n        </div>\n    );\n};\n\nconst ArticleDetail = () => { \n    const { id } = useParams(); // Extract the article ID from the URL parameters\n    const { loading, error, data } = useQuery(GET_ARTICLE_DETAIL, {\n        variables: { id },\n    });\n    const [article, setArticle] = useState({ texts: [] }); // Initialize with an empty texts array\n\n    useEffect(() => {\n        if (data && data.article) {\n            setArticle(data.article);\n        }\n    }, [data]);\n\n    if (loading) return <p></p>;\n    if (error) return <p>Error: {error.message}</p>;\n\n    console.log(article.texts);\n\n    return (\n        <>\n            <section className='w-full h-auto overflow-hidden'>\n                <div className='relative'>\n                    <img \n                        src=\"https://cdn.pixabay.com/photo/2021/01/05/06/40/boat-5889919_960_720.png\" \n                        alt=\"boat on water\" \n                        className=\"w-full max-h-[400px] object-cover\"\n                    />\n                    {/* Text overlay */}\n                    {/*                                                                                                                                                                                                                 */}\n                </div>\n                \n\n                <div className='max-w-[750px] mx-auto'>\n                <div className='flex items-center justify-between pt-6 pb-1'>\n                    <p className='text-slate-500 text-sm font-medium'>some other text whout this category</p>\n                    <p className='text-main text-xs'>&#9679;</p>\n                    <p className='text-main text-sm font-medium'>Last updated: December 1, 2023</p>\n                    <p className='text-main text-xs'>&#9679;</p>\n                    <p className='text-main text-sm font-medium'>6 minutes read</p>\n                </div>\n                <div>\n                    <p className=\"text-black text-5xl font-bold \">{article?.title}</p>\n                </div>\n                <div>\n                    <p className=\"text-black text-xl font-semibold py-2\">A well-designed blog is your best salesperson. A blog works 24/7 to generate traffic, inform your potential customers, build brand awareness and capture leads when theyâ€™re ready to convert. Conversely, a poorly designed blog can lead to a bad first impression,</p>\n                </div>\n                    <div className='h-full mt-10'>\n                        {article.texts?.map((text, index) => (\n                            <ArticleParagraph key={text.id} \n                                            paragraph={text.paragraph} \n                            />\n                        ))}\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n}\n\nexport default ArticleDetail;","import DOMPurify from 'dompurify';\n\nexport const sanitizeAndPrepareHtml = (html) => {\n  const clean = DOMPurify.sanitize(html);\n  const doc = new DOMParser().parseFromString(clean, 'text/html');\n  doc.querySelectorAll('a').forEach(link => {\n        const href = link.getAttribute('href');\n            if (href && !href.startsWith('http://') && !href.startsWith('https://')) {\n                link.setAttribute('href', `https://${href}`);\n            }\n        link.setAttribute('target', '_blank');\n        link.setAttribute('rel', 'noopener noreferrer');\n  });\n  return doc.body.innerHTML;\n};","import React from 'react'\n\nconst PageContainer = ({ className, children }) => {\n    return (\n        <div className={`flex justify-center w-full h-auto px-32 sm:px-8 md:px-10 lg:px-8 xl:px-10 ${className} poppins dark:bg-black`}>\n            <main className='h-auto w-full'>\n                {children}\n            </main>\n        </div>\n    )\n}\n\nexport default PageContainer\n","import React, { useEffect, useState } from 'react';\n\nconst SectionSubtitle = ({ subtitle, className }) => {\n    const [isDarkMode, setIsDarkMode] = useState(false);\n\n    useEffect(() => {\n        // Function to check and update dark mode status\n        const updateDarkMode = () => {\n            const darkModeEnabled = document.body.classList.contains('dark');\n            setIsDarkMode(darkModeEnabled);\n        };\n\n        // Initial check\n        updateDarkMode();\n\n        // Set up a MutationObserver to watch for changes to the body's class list\n        const observer = new MutationObserver(updateDarkMode);\n        observer.observe(document.body, { attributes: true, attributeFilter: ['class'] });\n\n        // Clean up the observer when the component unmounts\n        return () => observer.disconnect();\n    }, []);\n\n    // Provide a default value for the subtitle to avoid undefined errors\n    const effectiveSubtitle = subtitle || \"\";\n    // Calculate the width of the underline based on the subtitle length\n    const underlineWidth = `${effectiveSubtitle.length * 7.5}px`;\n\n    return (\n        <div className={`flex flex-col ${className}`}>\n            <h2 className=\"text-3xl font-semibold text-black relative dark:text-white sm:text-xl\">\n                {effectiveSubtitle}\n            </h2>\n            <div \n                className={`h-[3px] ${isDarkMode ? 'bg-[var(--underline-color-dark)]' : 'bg-[var(--underline-color-light)]'}`}\n                style={{ width: underlineWidth }}\n            ></div>\n        </div>\n    );\n};\n\nexport default SectionSubtitle;"],"names":["GET_ARTICLE_DETAIL","gql","_templateObject","_taggedTemplateLiteral","ArticleParagraph","_ref","paragraph","preparedHtml","html","clean","DOMPurify","doc","DOMParser","parseFromString","querySelectorAll","forEach","link","href","getAttribute","startsWith","setAttribute","concat","body","innerHTML","sanitizeAndPrepareHtml","_jsx","className","children","parse","ArticleDetail","_article$texts","id","useParams","loading","error","data","useQuery","variables","article","setArticle","useState","texts","useEffect","_jsxs","message","console","log","_Fragment","src","alt","title","map","text","index","subtitle","isDarkMode","setIsDarkMode","updateDarkMode","darkModeEnabled","document","classList","contains","observer","MutationObserver","observe","attributes","attributeFilter","disconnect","effectiveSubtitle","underlineWidth","length","style","width"],"sourceRoot":""}