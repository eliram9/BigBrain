{"version":3,"file":"static/js/952.e1eaee93.chunk.js","mappings":"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","sources":["apollo/formatDate.js","components/ContactFooter.jsx","components/quries/fetchArticle.js","apollo/htmlHandler.js","components/ui-elements/ScrollProgressBar.jsx","components/hooks/useCalculateWords.jsx","components/pages/ArticleDetail.jsx"],"sourcesContent":["// mm-dd-yyyy\nexport function formatDate(timestamp) {\n    const date = new Date(parseInt(timestamp, 10)); // Convert milliseconds to Date object\n    const day = String(date.getUTCDate()).padStart(2, '0'); // Get the day with leading zero\n    const month = String(date.getUTCMonth() + 1).padStart(2, '0'); // Get the month (0-indexed) with leading zero\n    const year = date.getUTCFullYear(); // Get the year\n\n    // Use string concatenation instead of template literals\n    return month + '-' + day + '-' + year; // Return formatted date as MM/DD/YYYY\n}\n\n// name of the month-dd, yyyy\nexport function formatFullDate(timestamp) {\n    const date = new Date(parseInt(timestamp, 10)); // Convert milliseconds to Date object\n    const day = date.getUTCDate(); // Get the day\n    const month = date.toLocaleString('default', { month: 'long' }); // Get the full name of the month\n    const year = date.getUTCFullYear(); // Get the year\n\n    // Return formatted date as Month Day, Year\n    return month + ' ' + day + ', ' + year;\n}","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Arrow, Envelope, Logo, Phone, Danger } from '../media/icons';\n\n\nconst firstH3 = {\n    backgroundImage: 'linear-gradient(to right, #124C5F, #C7E7E1, #EBA8BF)',\n    WebkitBackgroundClip: 'text',\n    backgroundClip: 'text',\n    color: 'transparent',\n    display: 'inline',\n    fontWeight: 600,\n}\n\nconst secondH3 = {\n    backgroundImage: 'linear-gradient(to right, #EBA8BF, #C7E7E1, #124C5F )',\n    WebkitBackgroundClip: 'text',\n    backgroundClip: 'text',\n    color: 'transparent',\n    display: 'inline',\n    fontWeight: 600\n}\n\nconst ContactFooter = () => {\n    const currentYear = new Date().getFullYear();\n    const [bannerWidth, setBannerWidth] = useState(\"\");\n\n    useEffect(() => {\n        const calculateWidth = () => {\n            const screenWidth = window.innerWidth;\n    \n            let newWidth;\n            if (screenWidth <= 767) {\n                newWidth = `${screenWidth * 0.9}px`; // 80% of the screen width for smaller screens\n            } else if (screenWidth > 767 && screenWidth <= 1279) {\n                newWidth = `${screenWidth * 0.8}px`; // 60% of 767px for medium screens\n            } else {\n                newWidth = `${screenWidth * 0.65}px`; // 50% of the screen width for larger screens\n            }\n        \n            setBannerWidth(newWidth);\n        };\n    \n        calculateWidth();\n        window.addEventListener('resize', calculateWidth);\n    \n        return () => window.removeEventListener('resize', calculateWidth);\n      }, []);\n\n    return (\n        // <footer className=\"text-main text-center bottom-0 poppins\">    \n        //     <div className='w-full pt-[150px] justify-center bg-gradient-to-b from-white to-blue relative z-20 py-0'>\n        //         <div className=\"md:flex md:flex-col grid grid-cols-3 gap-1 xs:gap-4\">\n        //         <Link className='flex items-center justify-center mb-6'  to=\"/\" >\n        //                     <Logo className={\"#124C5F\"} alt=\"logo\" width={25} />\n        //                     <span className=\"text-[26px] md:text-base text-main ml-1 font-extralight dark:text-main\">\n        //                         Big\n        //                         <span className='font-normal'>\n        //                             Brain\n        //                         </span>\n        //                     </span>\n        //                 </Link>   \n\n        //                 <div>\n        //                     <div className=\"flex sm:flex-col flex-row ml-10 justify-around w-full text-sm items-center\n        //                                     md:ml-0\"\n        //                     >\n        //                         <div className=\"flex items-center\">\n        //                             <Phone fill=\"#124C5F\" />\n        //                             <p className=\"leading-10\">+1 (301)-337-5676</p>\n        //                         </div>\n        //                         <div className=\"flex items-center\">\n        //                             <Envelope fill=\"#124C5F\" />\n        //                             <p className=\"leading-10\">info@bigbraintherapy.com</p>\n        //                         </div>\n        //                     </div>   \n        //                 </div>\n\n        //             <div>\n        //                 <div className=\"flex flex-col md:flex-row ml-10 justify-around w-full text-sm items-center\n        //                                     md:ml-0\">\n        //                     <Link to=\"/about\" className=\"leading-5\">About</Link>\n        //                     <Link to=\"/emdr\" className=\"leading-5\">EMDR</Link>\n        //                     <Link to=\"/resources\" className=\"leading-5\">Resources</Link>\n        //                     <Link to=\"/contact-us\" className=\"leading-5\">Contact </Link>\n        //                 </div>   \n        //             </div>\n        //         </div>\n\n\n        //         <div className='flex h-auto justify-center items-end py-5 px-2 z-20'>\n        //             <div className='w-[1400px] py-7 px-5 border border-red-200 rounded-xl bg-white bg-opacity-[35%]'>\n        //                 <div className='flex justify-center mb-2'>\n        //                     <Danger fill='#fda4af' />\n        //                 </div>\n        //                 <p className='font-medium py-2 text-sm xs:text-xs'>Amma Lucy LLC and or BigBrain is not a crisis facility.</p>\n        //                 <p className='font-medium pb-2 text-sm xs:text-xs'>Amma Lucy LLC and or BigBrain does not provide emergency services.</p>\n        //                 <p className='leading-5 font-light text-sm'>If you or someone you know is experiencing a mental health crisis, please call or text 988 at any \n        //                     time to be connected to a trained crisis counselor. If you’re looking to find an incredible therapist \n        //                     for ongoing proactive mental health care, you got to the right place, take a deep breath and get \n        //                     connected today!</p>\n        //             </div>           \n        //         </div>\n\n        //         <div className=''>\n        //             <p className=\"text-xs\">© {currentYear} All rights reserved to Amma Lucy LLC \n        //                 <span className='mx-1'>|</span> \n        //                 <a href=\"https://github.com/eliram9\" className=\"text-main hover:underline\" target=\"_blank\" rel=\"noopener noreferrer\">\n        //                     eliram9\n        //                 </a>\n        //                 &nbsp;&amp;&nbsp;\n        //                 <a href=\"https://github.com/ItayLevy1\" className=\"text-main hover:underline\" target=\"_blank\" rel=\"noopener noreferrer\">\n        //                     ItayLevy1\n        //                 </a>\n        //             </p>\n        //         </div>\n        //         <p className='text-red-500'>{bannerWidth}</p>\n        //     </div>\n        // </footer>\n        <footer className=\"relative text-black text-center bottom-0 w-full h-full poppins dark:text-white bg-gradient-to-b from-white to-blue dark:from-black dark:to-black pt-10\n                           md:pt-10\"\n        >\n\n            {/* <div className='w-full flex justify-center absolute -top-[90px] left-1/2 transform -translate-x-1/2 dark:bg-black \n                            md:-top-8 xl:-top-[95px]'>\n                <div style={{ width: bannerWidth }} className='bg-white flex flex-row justify-between rounded-xl drop-shadow-lg border-white border border-opacity-20 px-16 py-8 sm:flex-col sm:justify-center sm:px-6 sm:py-4 dark:bg-darkGray dark:border-darkGray'>\n                    <div className='flex flex-col items-start justify-end text-3xl mb-4 sm:mb-0 sm:text-xl sm:items-center xl:text-2xl'>\n                        <h3 style={firstH3}>Ready to get started?</h3>\n                        <h3 style={secondH3}>Talk to us today</h3>\n                    </div>\n\n                    <div className='flex items-center text-white sm:mt-4 sm:justify-center'>\n                        <Link to=\"/contact-us\" className='bg-main text-sm py-2 px-4 rounded-xl flex items-center hover:bg-[#0E3A4A] sm:py-1 xs:text-xs'>\n                            I'm ready\n                            <span><Arrow /></span>\n                        </Link>\n                    </div>\n                </div>\n            </div> */}\n            <div className='flex h-auto justify-center items-end py-5 px-2 z-20 dark:bg-black'>\n                <div className='w-[1400px] py-7 px-5 border border-red-200 rounded-xl bg-white bg-opacity-[35%] dark:bg-black'>\n                    <div className='flex justify-center mb-2'>\n                        <Danger fill='#fda4af' />\n                    </div>\n                    <p className='font-medium py-2 text-sm xs:text-xs'>Amma Lucy LLC and or BigBrain is not a crisis facility.</p>\n                    <p className='font-medium pb-2 text-sm xs:text-xs'>Amma Lucy LLC and or BigBrain does not provide emergency services.</p>\n                    <p className='leading-5 font-light text-xs'>If you or someone you know is experiencing a mental health crisis, please call or text 988 at any time to be connected \n                    with a trained crisis counselor. </p>\n                    <p className='leading-5 font-light text-xs'>If you’re looking to find an incredible therapist for ongoing, proactive mental health care, you've found the right place. Take a deep \n                    breath and reach out to be connected today.\n                    </p>\n                </div>\n            </div>\n\n            <div className='pb-4'>\n                <p className=\"text-xs\">© {currentYear} All rights reserved to Amma Lucy LLC\n                    <span className='mx-1 dark:text-pink'>|</span>\n                    <a href=\"https://github.com/eliram9\" className=\"text-black hover:underline dark:text-white\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        eliram9\n                    </a>\n                    &nbsp;&amp;&nbsp;\n                    <a href=\"https://github.com/ItayLevy1\" className=\"text-black hover:underline dark:text-white\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        ItayLevy1\n                    </a>\n                </p>\n            </div>\n            {/* <p className='text-red-500'>{bannerWidth}</p> */}\n        </footer>\n    );\n}\n\nexport default ContactFooter\n","import gql from 'graphql-tag';\n\nexport const GET_ARTICLE_DETAIL = gql`\n    query ArticleQuery($id: ID!) {\n        article(id: $id) {\n            id\n            title\n            author\n            createdDate\n            openingImageUrl\n            category\n            summary\n            texts {\n                id\n                paragraph\n            }\n            sources{\n                id\n                sourceName\n                url\n            }\n        }\n    }\n`;","import DOMPurify from 'dompurify';\n\nexport const sanitizeAndPrepareHtml = (html) => {\n    const clean = DOMPurify.sanitize(html, {\n        ALLOWED_TAGS: [\n          'p', 'br', 'strong', 'em', 'u', 's',\n          'h1', 'h2', 'h3', 'ol', 'ul', 'li',\n          'a', 'img', 'video', 'sub', 'sup', 'span' // Include 'span'\n        ],\n        ALLOWED_ATTR: ['href', 'src', 'target', 'rel', 'class', 'style'], // Allow 'style'\n        ALLOW_DATA_ATTR: false,\n        ALLOWED_CSS_PROPERTIES: ['color', 'background-color'], // Allow specific CSS properties\n    });\n    const doc = new DOMParser().parseFromString(clean, 'text/html');\n\n    // Process <a> tags (hyperlinks) and apply styles\n    doc.querySelectorAll('a').forEach(link => {\n        const href = link.getAttribute('href');\n        if (href && !href.startsWith('http://') && !href.startsWith('https://')) {\n            link.setAttribute('href', `https://${href}`);\n        }\n        link.setAttribute('target', '_blank');\n        link.setAttribute('rel', 'noopener noreferrer');\n        // Apply the underline and color\n        link.style.textDecoration = 'underline';\n        link.style.color = '#124C5F'; // Main color\n    });\n\n    // Define regex patterns for media\n    const patterns = {\n        youtube: /(?:https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.be)\\/.+/,\n        giphy: /https?:\\/\\/(?:media|i)\\.giphy\\.com\\/(?:media\\/)?(?:v1\\.)?(?:[A-Za-z0-9]+\\/)?[A-Za-z0-9]+\\/[\\w-]+\\.(?:gif|webp)/i,\n        image: /https?:\\/\\/.*\\.(?:png|jpg|jpeg|gif|webp)/i\n    };\n\n    // Function to create media elements\n    const createMediaElement = (url, type) => {\n        // Create a unique identifier for this media element\n        const uniqueId = 'media-' + Math.random().toString(36).substr(2, 9);\n\n        // Create the CSS for responsive behavior\n        const responsiveCSS = `\n            <style>\n                #${uniqueId} {\n                    width: 50%;\n                }\n                @media (max-width: 768px) {\n                    #${uniqueId} {\n                        width: 80%;\n                    }\n                }\n                @media (max-width: 479px) {\n                    #${uniqueId} {\n                        width: 100%;\n                    }\n                }\n            </style>\n        `;\n\n        switch (type) {\n            case 'youtube':\n                const videoId = url.match(/(?:youtube\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/)[1];\n                return `\n                    ${responsiveCSS}\n                    <div style=\"display: flex; justify-content: center; margin: 20px 0;\">\n                        <iframe \n                            id=\"${uniqueId}\"\n                            height=\"350\" \n                            src=\"https://www.youtube.com/embed/${videoId}\" \n                            frameborder=\"0\" \n                            allow=\"autoplay; encrypted-media\" \n                            allowfullscreen\n                        ></iframe>\n                    </div>\n                `;\n            case 'giphy':\n                return `\n                    ${responsiveCSS}\n                    <div style=\"display: flex; justify-content: center; margin: 20px 0;\">\n                        <img \n                            id=\"${uniqueId}\"\n                            src=\"${url}\" \n                            alt=\"Giphy GIF\" \n                            style=\"height: auto; display: block;\"\n                        />\n                    </div>\n                `;\n            case 'image':\n                return `<div style=\"display: flex; justify-content: center; margin: 20px 0;\">\n                            <img src=\"${url}\" alt=\"Embedded Image\" style=\"width: 100%; max-height: 370px; object-fit: cover; display: block;\" />\n                        </div>`;\n            default:\n                return url;\n        }\n    };\n\n    // Function to process text content\n    const processTextContent = (text) => {\n        for (const [type, pattern] of Object.entries(patterns)) {\n            if (pattern.test(text)) {\n                return createMediaElement(text, type);\n            }\n        }\n        return text;\n    };\n\n    // Add padding or margin around <strong> and <em> elements, avoiding punctuation\n    const processStyledElements = () => {\n        // Select both <strong> and <em> elements for processing\n        const styledElements = doc.querySelectorAll('strong, em');\n        styledElements.forEach(el => {\n            const prevChar = el.previousSibling?.textContent?.slice(-1) || '';\n            const nextChar = el.nextSibling?.textContent?.[0] || '';\n\n            // Add margin when <strong> or <em> follows a comma or other symbols\n            if (prevChar === ',' || prevChar === '!' || prevChar === '.' || prevChar === ':' || /\\d/.test(prevChar)) {\n                el.style.marginLeft = '5px';\n            }\n\n            // Ensure space between normal text and <strong> or <em> if no space or punctuation is present\n            if (prevChar && !/\\s/.test(prevChar) && !/[.,!?;:()]/.test(prevChar)) {\n                el.style.marginLeft = '5px';\n            }\n\n            // Ensure space AFTER a comma if not already present\n            if (prevChar === ',' && nextChar && !/\\s/.test(nextChar)) {\n                // If next character is not a space after the comma, insert a space\n                el.previousSibling.textContent = el.previousSibling.textContent.trimEnd() + ' ';\n            }\n\n            // Optionally: add padding on both sides when not adjacent to punctuation\n            const isLetterOrNumber = /[a-zA-Z0-9]/;\n            const isPunctuation = /[.,!?;:()]/;\n\n            el.style.paddingRight = isLetterOrNumber.test(nextChar) && !isPunctuation.test(nextChar) ? '5px' : '0';\n        });\n    };\n\n    // Recursively process nodes\n    const processNode = (node) => {\n        if (node.nodeType === Node.TEXT_NODE) {\n            const newContent = processTextContent(node.textContent);\n            if (newContent !== node.textContent) {\n                const fragment = doc.createRange().createContextualFragment(newContent);\n                node.parentNode.replaceChild(fragment, node);\n            }\n        } else if (node.nodeType === Node.ELEMENT_NODE) {\n            Array.from(node.childNodes).forEach(processNode);\n        }\n    };\n\n    processNode(doc.body);\n    processStyledElements(); // Apply padding logic to <strong> and <em> elements\n    return doc.body.innerHTML;\n};","// src/ui-elements/ScrollProgressBar.js\nimport React, { useState, useEffect } from 'react';\n\nconst ScrollProgressBar = ({ isSticky }) => {\n    const [scrollProgress, setScrollProgress] = useState(0);\n\n    const handleScroll = () => {\n        const totalHeight = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n        const currentScroll = window.scrollY;\n        const scrolled = (currentScroll / totalHeight) * 100;\n        setScrollProgress(scrolled);\n    };\n\n    useEffect(() => {\n        window.addEventListener('scroll', handleScroll, { passive: true });\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        };\n    }, []);\n\n    return (\n        <div\n            className={`w-full h-2 bg-gray-200 z-40 ${isSticky ? 'fixed top-0' : 'relative'}`}\n            aria-hidden=\"true\"\n        >\n            <div\n                className=\"h-full bg-main\"\n                style={{\n                    width: `${scrollProgress}%`,\n                    transition: 'width 0.3s ease-out',\n                }}\n            ></div>\n        </div>\n    );\n};\n\nexport default ScrollProgressBar;","// src/hooks/useCalculateWords.js\n\nimport { useState, useEffect } from 'react';\n\nconst useCalculateWords = (texts) => {\n    const [totalWords, setTotalWords] = useState(0);\n\n    useEffect(() => {\n        if (texts && texts.length > 0) {\n            const totalWordCount = texts.reduce((total, textObj) => {\n                const wordCount = textObj.paragraph ? textObj.paragraph.split(' ').filter(word => word.trim() !== '').length : 0;\n                return total + wordCount;\n            }, 0);\n\n            setTotalWords(totalWordCount);\n        }\n    }, [texts]);\n\n    return totalWords;\n};\n\nexport default useCalculateWords; // Make sure to export the hook as default\n","import React, { useEffect, useState, useRef } from 'react';\n\nimport { useQuery } from '@apollo/client';\nimport { Link, useParams } from 'react-router-dom';\nimport parse from 'html-react-parser';\n\nimport { GET_ARTICLE_DETAIL } from '../quries/fetchArticle';\nimport { formatFullDate } from '../../apollo/formatDate';\nimport { sanitizeAndPrepareHtml } from '../../apollo/htmlHandler';\nimport ScrollProgressBar from '../ui-elements/ScrollProgressBar';\nimport useCalculateWords from '../hooks/useCalculateWords';\nimport ContactFooter from '../ContactFooter';\n\nconst ArticleParagraph = ({ paragraph }) => {\n    const preparedHtml = sanitizeAndPrepareHtml(paragraph);\n    return (\n        <div className=\"prose prose-blog dark:prose-invert max-w-none\">\n            {parse(preparedHtml)}\n        </div>\n    );\n};\n\nconst ArticleSource = ({ sourceName, url }) => {\n    return (\n        <li className='text-darkGray py-2 text-md xs:text-[10px] sm:text-xs'>\n            <a href={url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"text-main underline hover:text-main/80\"\n            >\n                {sourceName}\n            </a>\n        </li>\n    );\n  }\n\nconst ArticleDetail = () => { \n    const { id } = useParams(); // Extract the article ID from the URL parameters\n    const { loading, error, data } = useQuery(GET_ARTICLE_DETAIL, {\n        variables: { id },\n    });\n    const [article, setArticle] = useState({ texts: [] }); // Initialize with an empty texts array\n    const [isSticky, setIsSticky] = useState(false); // Control stickiness\n    const imageRef = useRef(null); // Reference to the image\n    const totalWords = useCalculateWords(article.texts);  // Calculate total words using the custom hook\n\n    useEffect(() => {\n        if (data && data.article) {\n            setArticle(data.article);\n        }\n    }, [data]);\n\n    // Image \n    useEffect(() => {\n        let observer;\n        const setupObserver = () => {\n            observer = new IntersectionObserver(\n                ([entry]) => {\n                    setIsSticky(!entry.isIntersecting);\n                },\n                { threshold: 0 }\n            );\n\n            if (imageRef.current) {\n                observer.observe(imageRef.current);\n            }\n        };\n\n        // Set up the observer when the component mounts or when the image loads\n        if (imageRef.current && imageRef.current.complete) {\n            setupObserver();\n        } else if (imageRef.current) {\n            imageRef.current.onload = setupObserver;\n        }\n\n        return () => {\n            if (observer && imageRef.current) {\n                observer.unobserve(imageRef.current);\n            }\n        };\n    }, [imageRef, article.openingImageUrl]); // Add article.openingImageUrl as a dependency\n\n    if (loading) return <p></p>;\n    if (error) return <p>Error: {error.message}</p>;\n\n    console.log(article.texts);\n\n    return (\n        <>\n            <section className='w-full h-auto overflow-hidden poppins dark:bg-black poppins'>\n                <div className='relative'>\n                    <img \n                        src={article.openingImageUrl}\n                        alt={article.title} \n                        className=\"w-full max-h-[400px] object-cover\"\n                        ref={imageRef}\n                    />                                                                                                                                                                                                       \n                </div>  \n\n                <ScrollProgressBar isSticky={isSticky} />   {/* Scroll Progress Bar Positioned Below the Image */}\n\n                <div className='max-w-[750px] mx-auto md:px-[2rem]'>\n                    <div className='flex items-center justify-between pt-6 pb-1'>\n                        <p className='text-slate-500 text-sm  dark:text-lightBanana xs:text-[8px] sm:text-xs'><span className='font-medium'>Last updated: </span>{formatFullDate(article.createdDate)}</p>\n                        <p className='text-main text-xs dark:text-banana'>&#9679;</p>\n                        <p className='text-slate-500 text-sm font-medium dark:text-lightBanana xs:text-[8px] sm:text-xs'>{article.category}</p>\n                        <p className='text-main text-xs  dark:text-banana'>&#9679;</p>\n                        <p className='text-main text-sm font-medium  dark:text-lightBanana xs:text-[8px] sm:text-xs'>{Math.trunc(totalWords / 200)} minutes read</p> {/* Display total words */}\n                    </div>\n                    <div>\n                        <h1 className=\"text-black text-5xl font-bold dark:text-white mt-10 mb-5 \n                                      xs:text-2xl lg:text-4xl\"\n                        >\n                            {article.title}\n                    </h1>\n                    </div>\n                    <div>\n                        <p className=\"text-black text-xl font-semibold pb-2 pt-4 dark:text-white\n                                     sm:text-lg\"\n                        >\n                            {article.summary}\n                        </p>\n                    </div>\n                    <div className='py-4 text-slate-500 text-sm dark:text-lightBanana'>\n                        <p className='font-medium'>By: {article.author}</p>\n                        <p className='xs:text-xs'>EMDR Therapist, LCSW-C</p>\n                    </div>\n\n                    <hr />\n\n                    <div className='h-full mt-10 leading-loose mb-40'>\n                        {article.texts?.map((text, index) => {\n                            return (\n                                <ArticleParagraph key={text.id || index} paragraph={text.paragraph || text} />\n                            );\n                        })}\n                    </div>\n                    \n                    <hr />\n                    {article.sources && article.sources.length > 0 && (\n                        <div className=\"bg-babyBlue px-5 py-5 mt-10 rounded-lg mb-20 xs:mb-0\">\n                            <h2 className=\"text-darkGray text-xl font-semibold mb-4 md:text-sm\">Sources</h2>\n                            <ol className=\"list-decimal list-inside space-y-2\">\n                                {article.sources.map((source) => (\n                                    <ArticleSource key={source.id}\n                                                sourceName={source.sourceName}\n                                                url={source.url}\n                                    />\n                                ))}\n                            </ol>\n                        </div>\n                    )}\n                </div>    \n            </section>\n            <ContactFooter />\n        </>\n    );\n}\n\nexport default ArticleDetail;"],"names":["formatDate","timestamp","date","Date","parseInt","day","String","getUTCDate","padStart","getUTCMonth","getUTCFullYear","formatFullDate","toLocaleString","month","ContactFooter","currentYear","getFullYear","bannerWidth","setBannerWidth","useState","useEffect","calculateWidth","screenWidth","window","innerWidth","newWidth","concat","addEventListener","removeEventListener","_jsxs","className","children","_jsx","Danger","fill","href","target","rel","GET_ARTICLE_DETAIL","gql","_templateObject","_taggedTemplateLiteral","sanitizeAndPrepareHtml","html","clean","DOMPurify","ALLOWED_TAGS","ALLOWED_ATTR","ALLOW_DATA_ATTR","ALLOWED_CSS_PROPERTIES","doc","DOMParser","parseFromString","querySelectorAll","forEach","link","getAttribute","startsWith","setAttribute","style","textDecoration","color","patterns","youtube","giphy","image","createMediaElement","url","type","uniqueId","Math","random","toString","substr","responsiveCSS","videoId","match","processNode","node","nodeType","Node","TEXT_NODE","newContent","text","pattern","Object","entries","test","processTextContent","textContent","fragment","createRange","createContextualFragment","parentNode","replaceChild","ELEMENT_NODE","Array","from","childNodes","body","el","_el$previousSibling","_el$previousSibling$t","_el$nextSibling","_el$nextSibling$textC","prevChar","previousSibling","slice","nextChar","nextSibling","marginLeft","trimEnd","paddingRight","innerHTML","_ref","isSticky","scrollProgress","setScrollProgress","handleScroll","totalHeight","document","documentElement","scrollHeight","clientHeight","currentScroll","scrollY","passive","width","transition","texts","totalWords","setTotalWords","length","totalWordCount","reduce","total","textObj","paragraph","split","filter","word","trim","ArticleParagraph","preparedHtml","parse","ArticleSource","_ref2","sourceName","ArticleDetail","_article$texts","id","useParams","loading","error","data","useQuery","variables","article","setArticle","setIsSticky","imageRef","useRef","useCalculateWords","observer","setupObserver","IntersectionObserver","_ref3","entry","isIntersecting","threshold","current","observe","complete","onload","unobserve","openingImageUrl","message","console","log","_Fragment","src","alt","title","ref","ScrollProgressBar","createdDate","category","trunc","summary","author","map","index","sources","source"],"sourceRoot":""}